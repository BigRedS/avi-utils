#! /usr/bin/perl

if(!$ARGV[1]){&usage();}

my $Documentroot = $ARGV[0];
my $configFile = $ARGV[1];

my $tempFile = $configFile."~";
my $backupFile = $configFile."old";

open ($f, "<", $configFile);
my @lines = <$f>;
close($f);

&commentOutVhost($documentRoot);


sub commentOutVhost() {
	my $documentRoot=shift;	
	my $midst = &getMidst($documentRoot);
	my $beginning = &getBeginning($midst);
	my $end = &getEnd($midst);

	if ($beginning < $end){
		print "Found virtualhost:\n";
		for (my $i=$beginning; $i<=$end; $i++){
			print "\t$lines[$i]";
		}

		print "Comment out this vhost? [y|N]\n";
		my $answer = <STDIN>;
		if ($answer =~ /^y$/i){
			&commentOut($beginning, $end);
		}
	}
}

sub commentOut() {
	my $beginning = shift;
	my $end = shift;

	rename($configFile, $backupFile) or die "Error backing up $configFile to $backupFile";

	open($f, ">", $configFile) or die "Error opening $configFile for writing";

	for(my $i=0; $i <= @lines; $i++){

		if( ($i <= $end) && ($i >= $beginning) ){
			print $f "#".$lines[$i];
		}else{
			print $f $lines[$i];
		}
	}
	close($f);
}

sub getMidst() {
	my $DocumentRoot = shift;
	my $count = 0;
	foreach my $line (@lines){
		if ($line =~ /DocumentRoot\s+$DocumentRoot/){
			return $count;
		}
		$count++;
	}
}

sub getBeginning(){
	my $midst = shift;
	my $return;
	for (my $i=$midst; $i > 1; $i--){
		if (@lines[$i] =~ /.*<\s*VirtualHost\s+.+>/i){
			return $i;
		}
	}
}

sub getEnd(){
	my $midst = shift;
	my $return;
	for (my $i=$midst; $i<=@lines; $i++){
		if(@lines[$i] =~ /.*<\/VirtualHost\s*>/i){
			return $i;
		}
	}
}

sub usage(){
print <<EOF
Usage:
	$0 [DocumentRoot] [file]

Identifies VirtualHosts in the file specified by their
DocumentRoot definition. Based on a string comparison. 
Do not include the 'DocumentRoot' part.

Example:

adissite /home/avi/public_html /etc/apache/httpd.conf

EOF
}
